### YamlMime:ManagedReference
items:
- uid: VoxelPrototype.common.Game.IBlockAcessor
  commentId: T:VoxelPrototype.common.Game.IBlockAcessor
  id: IBlockAcessor
  parent: VoxelPrototype.common.Game
  children:
  - VoxelPrototype.common.Game.IBlockAcessor.GetBlock(System.Int32,System.Int32,System.Int32)
  - VoxelPrototype.common.Game.IBlockAcessor.IsAir(System.Int32,System.Int32,System.Int32)
  - VoxelPrototype.common.Game.IBlockAcessor.IsTransparent(System.Int32,System.Int32,System.Int32)
  - VoxelPrototype.common.Game.IBlockAcessor.SetBlock(System.Int32,System.Int32,System.Int32,VoxelPrototype.common.API.Blocks.State.BlockState)
  langs:
  - csharp
  - vb
  name: IBlockAcessor
  nameWithType: IBlockAcessor
  fullName: VoxelPrototype.common.Game.IBlockAcessor
  type: Interface
  source:
    remote:
      path: VoxelPrototype/common/Game/IBlockAcessor.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: IBlockAcessor
    path: VoxelPrototype/common/Game/IBlockAcessor.cs
    startLine: 4
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.Game
  syntax:
    content: public interface IBlockAcessor
    content.vb: Public Interface IBlockAcessor
- uid: VoxelPrototype.common.Game.IBlockAcessor.GetBlock(System.Int32,System.Int32,System.Int32)
  commentId: M:VoxelPrototype.common.Game.IBlockAcessor.GetBlock(System.Int32,System.Int32,System.Int32)
  id: GetBlock(System.Int32,System.Int32,System.Int32)
  parent: VoxelPrototype.common.Game.IBlockAcessor
  langs:
  - csharp
  - vb
  name: GetBlock(int, int, int)
  nameWithType: IBlockAcessor.GetBlock(int, int, int)
  fullName: VoxelPrototype.common.Game.IBlockAcessor.GetBlock(int, int, int)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/Game/IBlockAcessor.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: GetBlock
    path: VoxelPrototype/common/Game/IBlockAcessor.cs
    startLine: 6
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.Game
  syntax:
    content: BlockState GetBlock(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: z
      type: System.Int32
    return:
      type: VoxelPrototype.common.API.Blocks.State.BlockState
    content.vb: Function GetBlock(x As Integer, y As Integer, z As Integer) As BlockState
  overload: VoxelPrototype.common.Game.IBlockAcessor.GetBlock*
  nameWithType.vb: IBlockAcessor.GetBlock(Integer, Integer, Integer)
  fullName.vb: VoxelPrototype.common.Game.IBlockAcessor.GetBlock(Integer, Integer, Integer)
  name.vb: GetBlock(Integer, Integer, Integer)
- uid: VoxelPrototype.common.Game.IBlockAcessor.SetBlock(System.Int32,System.Int32,System.Int32,VoxelPrototype.common.API.Blocks.State.BlockState)
  commentId: M:VoxelPrototype.common.Game.IBlockAcessor.SetBlock(System.Int32,System.Int32,System.Int32,VoxelPrototype.common.API.Blocks.State.BlockState)
  id: SetBlock(System.Int32,System.Int32,System.Int32,VoxelPrototype.common.API.Blocks.State.BlockState)
  parent: VoxelPrototype.common.Game.IBlockAcessor
  langs:
  - csharp
  - vb
  name: SetBlock(int, int, int, BlockState)
  nameWithType: IBlockAcessor.SetBlock(int, int, int, BlockState)
  fullName: VoxelPrototype.common.Game.IBlockAcessor.SetBlock(int, int, int, VoxelPrototype.common.API.Blocks.State.BlockState)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/Game/IBlockAcessor.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: SetBlock
    path: VoxelPrototype/common/Game/IBlockAcessor.cs
    startLine: 7
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.Game
  syntax:
    content: void SetBlock(int x, int y, int z, BlockState State)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: z
      type: System.Int32
    - id: State
      type: VoxelPrototype.common.API.Blocks.State.BlockState
    content.vb: Sub SetBlock(x As Integer, y As Integer, z As Integer, State As BlockState)
  overload: VoxelPrototype.common.Game.IBlockAcessor.SetBlock*
  nameWithType.vb: IBlockAcessor.SetBlock(Integer, Integer, Integer, BlockState)
  fullName.vb: VoxelPrototype.common.Game.IBlockAcessor.SetBlock(Integer, Integer, Integer, VoxelPrototype.common.API.Blocks.State.BlockState)
  name.vb: SetBlock(Integer, Integer, Integer, BlockState)
- uid: VoxelPrototype.common.Game.IBlockAcessor.IsTransparent(System.Int32,System.Int32,System.Int32)
  commentId: M:VoxelPrototype.common.Game.IBlockAcessor.IsTransparent(System.Int32,System.Int32,System.Int32)
  id: IsTransparent(System.Int32,System.Int32,System.Int32)
  parent: VoxelPrototype.common.Game.IBlockAcessor
  langs:
  - csharp
  - vb
  name: IsTransparent(int, int, int)
  nameWithType: IBlockAcessor.IsTransparent(int, int, int)
  fullName: VoxelPrototype.common.Game.IBlockAcessor.IsTransparent(int, int, int)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/Game/IBlockAcessor.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: IsTransparent
    path: VoxelPrototype/common/Game/IBlockAcessor.cs
    startLine: 8
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.Game
  syntax:
    content: bool IsTransparent(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: z
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Function IsTransparent(x As Integer, y As Integer, z As Integer) As Boolean
  overload: VoxelPrototype.common.Game.IBlockAcessor.IsTransparent*
  nameWithType.vb: IBlockAcessor.IsTransparent(Integer, Integer, Integer)
  fullName.vb: VoxelPrototype.common.Game.IBlockAcessor.IsTransparent(Integer, Integer, Integer)
  name.vb: IsTransparent(Integer, Integer, Integer)
- uid: VoxelPrototype.common.Game.IBlockAcessor.IsAir(System.Int32,System.Int32,System.Int32)
  commentId: M:VoxelPrototype.common.Game.IBlockAcessor.IsAir(System.Int32,System.Int32,System.Int32)
  id: IsAir(System.Int32,System.Int32,System.Int32)
  parent: VoxelPrototype.common.Game.IBlockAcessor
  langs:
  - csharp
  - vb
  name: IsAir(int, int, int)
  nameWithType: IBlockAcessor.IsAir(int, int, int)
  fullName: VoxelPrototype.common.Game.IBlockAcessor.IsAir(int, int, int)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/Game/IBlockAcessor.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: IsAir
    path: VoxelPrototype/common/Game/IBlockAcessor.cs
    startLine: 9
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.Game
  syntax:
    content: bool IsAir(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: z
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Function IsAir(x As Integer, y As Integer, z As Integer) As Boolean
  overload: VoxelPrototype.common.Game.IBlockAcessor.IsAir*
  nameWithType.vb: IBlockAcessor.IsAir(Integer, Integer, Integer)
  fullName.vb: VoxelPrototype.common.Game.IBlockAcessor.IsAir(Integer, Integer, Integer)
  name.vb: IsAir(Integer, Integer, Integer)
references:
- uid: VoxelPrototype.common.Game
  commentId: N:VoxelPrototype.common.Game
  href: VoxelPrototype.html
  name: VoxelPrototype.common.Game
  nameWithType: VoxelPrototype.common.Game
  fullName: VoxelPrototype.common.Game
  spec.csharp:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.Game
    name: Game
    href: VoxelPrototype.common.Game.html
  spec.vb:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.Game
    name: Game
    href: VoxelPrototype.common.Game.html
- uid: VoxelPrototype.common.Game.IBlockAcessor.GetBlock*
  commentId: Overload:VoxelPrototype.common.Game.IBlockAcessor.GetBlock
  href: VoxelPrototype.common.Game.IBlockAcessor.html#VoxelPrototype_common_Game_IBlockAcessor_GetBlock_System_Int32_System_Int32_System_Int32_
  name: GetBlock
  nameWithType: IBlockAcessor.GetBlock
  fullName: VoxelPrototype.common.Game.IBlockAcessor.GetBlock
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: VoxelPrototype.common.API.Blocks.State.BlockState
  commentId: T:VoxelPrototype.common.API.Blocks.State.BlockState
  parent: VoxelPrototype.common.API.Blocks.State
  href: VoxelPrototype.common.API.Blocks.State.BlockState.html
  name: BlockState
  nameWithType: BlockState
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VoxelPrototype.common.API.Blocks.State
  commentId: N:VoxelPrototype.common.API.Blocks.State
  href: VoxelPrototype.html
  name: VoxelPrototype.common.API.Blocks.State
  nameWithType: VoxelPrototype.common.API.Blocks.State
  fullName: VoxelPrototype.common.API.Blocks.State
  spec.csharp:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.API
    name: API
    href: VoxelPrototype.common.API.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks
    name: Blocks
    href: VoxelPrototype.common.API.Blocks.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks.State
    name: State
    href: VoxelPrototype.common.API.Blocks.State.html
  spec.vb:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.API
    name: API
    href: VoxelPrototype.common.API.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks
    name: Blocks
    href: VoxelPrototype.common.API.Blocks.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks.State
    name: State
    href: VoxelPrototype.common.API.Blocks.State.html
- uid: VoxelPrototype.common.Game.IBlockAcessor.SetBlock*
  commentId: Overload:VoxelPrototype.common.Game.IBlockAcessor.SetBlock
  href: VoxelPrototype.common.Game.IBlockAcessor.html#VoxelPrototype_common_Game_IBlockAcessor_SetBlock_System_Int32_System_Int32_System_Int32_VoxelPrototype_common_API_Blocks_State_BlockState_
  name: SetBlock
  nameWithType: IBlockAcessor.SetBlock
  fullName: VoxelPrototype.common.Game.IBlockAcessor.SetBlock
- uid: VoxelPrototype.common.Game.IBlockAcessor.IsTransparent*
  commentId: Overload:VoxelPrototype.common.Game.IBlockAcessor.IsTransparent
  href: VoxelPrototype.common.Game.IBlockAcessor.html#VoxelPrototype_common_Game_IBlockAcessor_IsTransparent_System_Int32_System_Int32_System_Int32_
  name: IsTransparent
  nameWithType: IBlockAcessor.IsTransparent
  fullName: VoxelPrototype.common.Game.IBlockAcessor.IsTransparent
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: VoxelPrototype.common.Game.IBlockAcessor.IsAir*
  commentId: Overload:VoxelPrototype.common.Game.IBlockAcessor.IsAir
  href: VoxelPrototype.common.Game.IBlockAcessor.html#VoxelPrototype_common_Game_IBlockAcessor_IsAir_System_Int32_System_Int32_System_Int32_
  name: IsAir
  nameWithType: IBlockAcessor.IsAir
  fullName: VoxelPrototype.common.Game.IBlockAcessor.IsAir
