### YamlMime:ManagedReference
items:
- uid: VoxelPrototype.common.API.Blocks.State.BlockState
  commentId: T:VoxelPrototype.common.API.Blocks.State.BlockState
  id: BlockState
  parent: VoxelPrototype.common.API.Blocks.State
  children:
  - VoxelPrototype.common.API.Blocks.State.BlockState.#ctor
  - VoxelPrototype.common.API.Blocks.State.BlockState.#ctor(VoxelPrototype.common.API.Blocks.Block,System.Collections.Generic.Dictionary{VoxelPrototype.common.API.Blocks.Properties.IProperty,System.Object},System.UInt32)
  - VoxelPrototype.common.API.Blocks.State.BlockState.Block
  - VoxelPrototype.common.API.Blocks.State.BlockState.Deserialize(VBF.VBFCompound)
  - VoxelPrototype.common.API.Blocks.State.BlockState.Equals(System.Object)
  - VoxelPrototype.common.API.Blocks.State.BlockState.GetIntern``1(VoxelPrototype.common.API.Blocks.Properties.Property{``0})
  - VoxelPrototype.common.API.Blocks.State.BlockState.Get``1(VoxelPrototype.common.API.Blocks.Properties.Property{``0})
  - VoxelPrototype.common.API.Blocks.State.BlockState.Has(VoxelPrototype.common.API.Blocks.Properties.Property{System.Object})
  - VoxelPrototype.common.API.Blocks.State.BlockState.ID
  - VoxelPrototype.common.API.Blocks.State.BlockState.Serialize
  - VoxelPrototype.common.API.Blocks.State.BlockState.SetAllStates(System.Collections.Generic.Dictionary{System.ValueTuple{VoxelPrototype.common.API.Blocks.Properties.IProperty,System.Object},VoxelPrototype.common.API.Blocks.State.BlockState})
  - VoxelPrototype.common.API.Blocks.State.BlockState.ToString
  - VoxelPrototype.common.API.Blocks.State.BlockState.WithRaw``1(VoxelPrototype.common.API.Blocks.Properties.Property{``0},System.Object)
  - VoxelPrototype.common.API.Blocks.State.BlockState.With``1(VoxelPrototype.common.API.Blocks.Properties.Property{``0},``0)
  langs:
  - csharp
  - vb
  name: BlockState
  nameWithType: BlockState
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState
  type: Class
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: BlockState
    path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
    startLine: 4
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.State
  syntax:
    content: 'public class BlockState : IVBFSerializable<BlockState>'
    content.vb: Public Class BlockState Implements IVBFSerializable(Of BlockState)
  inheritance:
  - System.Object
  implements:
  - VBF.IVBFSerializable{VoxelPrototype.common.API.Blocks.State.BlockState}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.Block
  commentId: P:VoxelPrototype.common.API.Blocks.State.BlockState.Block
  id: Block
  parent: VoxelPrototype.common.API.Blocks.State.BlockState
  langs:
  - csharp
  - vb
  name: Block
  nameWithType: BlockState.Block
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.Block
  type: Property
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: Block
    path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
    startLine: 6
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.State
  syntax:
    content: public Block Block { get; }
    parameters: []
    return:
      type: VoxelPrototype.common.API.Blocks.Block
    content.vb: Public ReadOnly Property Block As Block
  overload: VoxelPrototype.common.API.Blocks.State.BlockState.Block*
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.ID
  commentId: P:VoxelPrototype.common.API.Blocks.State.BlockState.ID
  id: ID
  parent: VoxelPrototype.common.API.Blocks.State.BlockState
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: BlockState.ID
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.ID
  type: Property
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: ID
    path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
    startLine: 7
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.State
  syntax:
    content: public uint ID { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Property ID As UInteger
  overload: VoxelPrototype.common.API.Blocks.State.BlockState.ID*
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.#ctor
  commentId: M:VoxelPrototype.common.API.Blocks.State.BlockState.#ctor
  id: '#ctor'
  parent: VoxelPrototype.common.API.Blocks.State.BlockState
  langs:
  - csharp
  - vb
  name: BlockState()
  nameWithType: BlockState.BlockState()
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.BlockState()
  type: Constructor
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: .ctor
    path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
    startLine: 10
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.State
  syntax:
    content: public BlockState()
    content.vb: Public Sub New()
  overload: VoxelPrototype.common.API.Blocks.State.BlockState.#ctor*
  nameWithType.vb: BlockState.New()
  fullName.vb: VoxelPrototype.common.API.Blocks.State.BlockState.New()
  name.vb: New()
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.#ctor(VoxelPrototype.common.API.Blocks.Block,System.Collections.Generic.Dictionary{VoxelPrototype.common.API.Blocks.Properties.IProperty,System.Object},System.UInt32)
  commentId: M:VoxelPrototype.common.API.Blocks.State.BlockState.#ctor(VoxelPrototype.common.API.Blocks.Block,System.Collections.Generic.Dictionary{VoxelPrototype.common.API.Blocks.Properties.IProperty,System.Object},System.UInt32)
  id: '#ctor(VoxelPrototype.common.API.Blocks.Block,System.Collections.Generic.Dictionary{VoxelPrototype.common.API.Blocks.Properties.IProperty,System.Object},System.UInt32)'
  parent: VoxelPrototype.common.API.Blocks.State.BlockState
  langs:
  - csharp
  - vb
  name: BlockState(Block, Dictionary<IProperty, object>, uint)
  nameWithType: BlockState.BlockState(Block, Dictionary<IProperty, object>, uint)
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.BlockState(VoxelPrototype.common.API.Blocks.Block, System.Collections.Generic.Dictionary<VoxelPrototype.common.API.Blocks.Properties.IProperty, object>, uint)
  type: Constructor
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: .ctor
    path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
    startLine: 11
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.State
  syntax:
    content: public BlockState(Block Block, Dictionary<IProperty, object> Properties, uint ID)
    parameters:
    - id: Block
      type: VoxelPrototype.common.API.Blocks.Block
    - id: Properties
      type: System.Collections.Generic.Dictionary{VoxelPrototype.common.API.Blocks.Properties.IProperty,System.Object}
    - id: ID
      type: System.UInt32
    content.vb: Public Sub New(Block As Block, Properties As Dictionary(Of IProperty, Object), ID As UInteger)
  overload: VoxelPrototype.common.API.Blocks.State.BlockState.#ctor*
  nameWithType.vb: BlockState.New(Block, Dictionary(Of IProperty, Object), UInteger)
  fullName.vb: VoxelPrototype.common.API.Blocks.State.BlockState.New(VoxelPrototype.common.API.Blocks.Block, System.Collections.Generic.Dictionary(Of VoxelPrototype.common.API.Blocks.Properties.IProperty, Object), UInteger)
  name.vb: New(Block, Dictionary(Of IProperty, Object), UInteger)
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.Has(VoxelPrototype.common.API.Blocks.Properties.Property{System.Object})
  commentId: M:VoxelPrototype.common.API.Blocks.State.BlockState.Has(VoxelPrototype.common.API.Blocks.Properties.Property{System.Object})
  id: Has(VoxelPrototype.common.API.Blocks.Properties.Property{System.Object})
  parent: VoxelPrototype.common.API.Blocks.State.BlockState
  langs:
  - csharp
  - vb
  name: Has(Property<object>)
  nameWithType: BlockState.Has(Property<object>)
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.Has(VoxelPrototype.common.API.Blocks.Properties.Property<object>)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: Has
    path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
    startLine: 17
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.State
  syntax:
    content: public bool Has(Property<object> property)
    parameters:
    - id: property
      type: VoxelPrototype.common.API.Blocks.Properties.Property{System.Object}
    return:
      type: System.Boolean
    content.vb: Public Function Has([property] As [Property](Of Object)) As Boolean
  overload: VoxelPrototype.common.API.Blocks.State.BlockState.Has*
  nameWithType.vb: BlockState.Has(Property(Of Object))
  fullName.vb: VoxelPrototype.common.API.Blocks.State.BlockState.Has(VoxelPrototype.common.API.Blocks.Properties.Property(Of Object))
  name.vb: Has(Property(Of Object))
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.Get``1(VoxelPrototype.common.API.Blocks.Properties.Property{``0})
  commentId: M:VoxelPrototype.common.API.Blocks.State.BlockState.Get``1(VoxelPrototype.common.API.Blocks.Properties.Property{``0})
  id: Get``1(VoxelPrototype.common.API.Blocks.Properties.Property{``0})
  parent: VoxelPrototype.common.API.Blocks.State.BlockState
  langs:
  - csharp
  - vb
  name: Get<T>(Property<T>)
  nameWithType: BlockState.Get<T>(Property<T>)
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.Get<T>(VoxelPrototype.common.API.Blocks.Properties.Property<T>)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: Get
    path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
    startLine: 21
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.State
  syntax:
    content: public T Get<T>(Property<T> property)
    parameters:
    - id: property
      type: VoxelPrototype.common.API.Blocks.Properties.Property{{T}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function [Get](Of T)([property] As [Property](Of T)) As T
  overload: VoxelPrototype.common.API.Blocks.State.BlockState.Get*
  nameWithType.vb: BlockState.Get(Of T)(Property(Of T))
  fullName.vb: VoxelPrototype.common.API.Blocks.State.BlockState.Get(Of T)(VoxelPrototype.common.API.Blocks.Properties.Property(Of T))
  name.vb: Get(Of T)(Property(Of T))
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.GetIntern``1(VoxelPrototype.common.API.Blocks.Properties.Property{``0})
  commentId: M:VoxelPrototype.common.API.Blocks.State.BlockState.GetIntern``1(VoxelPrototype.common.API.Blocks.Properties.Property{``0})
  id: GetIntern``1(VoxelPrototype.common.API.Blocks.Properties.Property{``0})
  parent: VoxelPrototype.common.API.Blocks.State.BlockState
  langs:
  - csharp
  - vb
  name: GetIntern<T>(Property<T>)
  nameWithType: BlockState.GetIntern<T>(Property<T>)
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.GetIntern<T>(VoxelPrototype.common.API.Blocks.Properties.Property<T>)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: GetIntern
    path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
    startLine: 32
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.State
  syntax:
    content: public (T, IProperty) GetIntern<T>(Property<T> property)
    parameters:
    - id: property
      type: VoxelPrototype.common.API.Blocks.Properties.Property{{T}}
    typeParameters:
    - id: T
    return:
      type: System.ValueTuple{{T},VoxelPrototype.common.API.Blocks.Properties.IProperty}
    content.vb: Public Function GetIntern(Of T)([property] As [Property](Of T)) As (T, IProperty)
  overload: VoxelPrototype.common.API.Blocks.State.BlockState.GetIntern*
  nameWithType.vb: BlockState.GetIntern(Of T)(Property(Of T))
  fullName.vb: VoxelPrototype.common.API.Blocks.State.BlockState.GetIntern(Of T)(VoxelPrototype.common.API.Blocks.Properties.Property(Of T))
  name.vb: GetIntern(Of T)(Property(Of T))
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.With``1(VoxelPrototype.common.API.Blocks.Properties.Property{``0},``0)
  commentId: M:VoxelPrototype.common.API.Blocks.State.BlockState.With``1(VoxelPrototype.common.API.Blocks.Properties.Property{``0},``0)
  id: With``1(VoxelPrototype.common.API.Blocks.Properties.Property{``0},``0)
  parent: VoxelPrototype.common.API.Blocks.State.BlockState
  langs:
  - csharp
  - vb
  name: With<T>(Property<T>, T)
  nameWithType: BlockState.With<T>(Property<T>, T)
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.With<T>(VoxelPrototype.common.API.Blocks.Properties.Property<T>, T)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: With
    path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
    startLine: 43
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.State
  syntax:
    content: public BlockState With<T>(Property<T> property, T value)
    parameters:
    - id: property
      type: VoxelPrototype.common.API.Blocks.Properties.Property{{T}}
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: VoxelPrototype.common.API.Blocks.State.BlockState
    content.vb: Public Function [With](Of T)([property] As [Property](Of T), value As T) As BlockState
  overload: VoxelPrototype.common.API.Blocks.State.BlockState.With*
  nameWithType.vb: BlockState.With(Of T)(Property(Of T), T)
  fullName.vb: VoxelPrototype.common.API.Blocks.State.BlockState.With(Of T)(VoxelPrototype.common.API.Blocks.Properties.Property(Of T), T)
  name.vb: With(Of T)(Property(Of T), T)
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.WithRaw``1(VoxelPrototype.common.API.Blocks.Properties.Property{``0},System.Object)
  commentId: M:VoxelPrototype.common.API.Blocks.State.BlockState.WithRaw``1(VoxelPrototype.common.API.Blocks.Properties.Property{``0},System.Object)
  id: WithRaw``1(VoxelPrototype.common.API.Blocks.Properties.Property{``0},System.Object)
  parent: VoxelPrototype.common.API.Blocks.State.BlockState
  langs:
  - csharp
  - vb
  name: WithRaw<T>(Property<T>, object)
  nameWithType: BlockState.WithRaw<T>(Property<T>, object)
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.WithRaw<T>(VoxelPrototype.common.API.Blocks.Properties.Property<T>, object)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: WithRaw
    path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
    startLine: 47
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.State
  syntax:
    content: public BlockState WithRaw<T>(Property<T> property, object value)
    parameters:
    - id: property
      type: VoxelPrototype.common.API.Blocks.Properties.Property{{T}}
    - id: value
      type: System.Object
    typeParameters:
    - id: T
    return:
      type: VoxelPrototype.common.API.Blocks.State.BlockState
    content.vb: Public Function WithRaw(Of T)([property] As [Property](Of T), value As Object) As BlockState
  overload: VoxelPrototype.common.API.Blocks.State.BlockState.WithRaw*
  nameWithType.vb: BlockState.WithRaw(Of T)(Property(Of T), Object)
  fullName.vb: VoxelPrototype.common.API.Blocks.State.BlockState.WithRaw(Of T)(VoxelPrototype.common.API.Blocks.Properties.Property(Of T), Object)
  name.vb: WithRaw(Of T)(Property(Of T), Object)
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.Equals(System.Object)
  commentId: M:VoxelPrototype.common.API.Blocks.State.BlockState.Equals(System.Object)
  id: Equals(System.Object)
  parent: VoxelPrototype.common.API.Blocks.State.BlockState
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: BlockState.Equals(object)
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.Equals(object)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: Equals
    path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
    startLine: 62
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.State
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: VoxelPrototype.common.API.Blocks.State.BlockState.Equals*
  nameWithType.vb: BlockState.Equals(Object)
  fullName.vb: VoxelPrototype.common.API.Blocks.State.BlockState.Equals(Object)
  name.vb: Equals(Object)
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.ToString
  commentId: M:VoxelPrototype.common.API.Blocks.State.BlockState.ToString
  id: ToString
  parent: VoxelPrototype.common.API.Blocks.State.BlockState
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BlockState.ToString()
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.ToString()
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: ToString
    path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
    startLine: 75
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.State
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: VoxelPrototype.common.API.Blocks.State.BlockState.ToString*
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.SetAllStates(System.Collections.Generic.Dictionary{System.ValueTuple{VoxelPrototype.common.API.Blocks.Properties.IProperty,System.Object},VoxelPrototype.common.API.Blocks.State.BlockState})
  commentId: M:VoxelPrototype.common.API.Blocks.State.BlockState.SetAllStates(System.Collections.Generic.Dictionary{System.ValueTuple{VoxelPrototype.common.API.Blocks.Properties.IProperty,System.Object},VoxelPrototype.common.API.Blocks.State.BlockState})
  id: SetAllStates(System.Collections.Generic.Dictionary{System.ValueTuple{VoxelPrototype.common.API.Blocks.Properties.IProperty,System.Object},VoxelPrototype.common.API.Blocks.State.BlockState})
  parent: VoxelPrototype.common.API.Blocks.State.BlockState
  langs:
  - csharp
  - vb
  name: SetAllStates(Dictionary<(IProperty, object), BlockState>)
  nameWithType: BlockState.SetAllStates(Dictionary<(IProperty, object), BlockState>)
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.SetAllStates(System.Collections.Generic.Dictionary<(VoxelPrototype.common.API.Blocks.Properties.IProperty, object), VoxelPrototype.common.API.Blocks.State.BlockState>)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: SetAllStates
    path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
    startLine: 90
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.State
  syntax:
    content: public void SetAllStates(Dictionary<(IProperty, object), BlockState> states)
    parameters:
    - id: states
      type: System.Collections.Generic.Dictionary{System.ValueTuple{VoxelPrototype.common.API.Blocks.Properties.IProperty,System.Object},VoxelPrototype.common.API.Blocks.State.BlockState}
    content.vb: Public Sub SetAllStates(states As Dictionary(Of (IProperty, Object), BlockState))
  overload: VoxelPrototype.common.API.Blocks.State.BlockState.SetAllStates*
  nameWithType.vb: BlockState.SetAllStates(Dictionary(Of (IProperty, Object), BlockState))
  fullName.vb: VoxelPrototype.common.API.Blocks.State.BlockState.SetAllStates(System.Collections.Generic.Dictionary(Of (VoxelPrototype.common.API.Blocks.Properties.IProperty, Object), VoxelPrototype.common.API.Blocks.State.BlockState))
  name.vb: SetAllStates(Dictionary(Of (IProperty, Object), BlockState))
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.Serialize
  commentId: M:VoxelPrototype.common.API.Blocks.State.BlockState.Serialize
  id: Serialize
  parent: VoxelPrototype.common.API.Blocks.State.BlockState
  langs:
  - csharp
  - vb
  name: Serialize()
  nameWithType: BlockState.Serialize()
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.Serialize()
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: Serialize
    path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
    startLine: 94
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.State
  example: []
  syntax:
    content: public VBFCompound Serialize()
    return:
      type: VBF.VBFCompound
    content.vb: Public Function Serialize() As VBFCompound
  overload: VoxelPrototype.common.API.Blocks.State.BlockState.Serialize*
  implements:
  - VBF.IVBFSerializable{VoxelPrototype.common.API.Blocks.State.BlockState}.Serialize
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.Deserialize(VBF.VBFCompound)
  commentId: M:VoxelPrototype.common.API.Blocks.State.BlockState.Deserialize(VBF.VBFCompound)
  id: Deserialize(VBF.VBFCompound)
  parent: VoxelPrototype.common.API.Blocks.State.BlockState
  langs:
  - csharp
  - vb
  name: Deserialize(VBFCompound)
  nameWithType: BlockState.Deserialize(VBFCompound)
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.Deserialize(VBF.VBFCompound)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: Deserialize
    path: VoxelPrototype/common/API/Blocks/State/BlockState.cs
    startLine: 120
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.State
  example: []
  syntax:
    content: public BlockState Deserialize(VBFCompound compound)
    parameters:
    - id: compound
      type: VBF.VBFCompound
    return:
      type: VoxelPrototype.common.API.Blocks.State.BlockState
    content.vb: Public Function Deserialize(compound As VBFCompound) As BlockState
  overload: VoxelPrototype.common.API.Blocks.State.BlockState.Deserialize*
  implements:
  - VBF.IVBFSerializable{VoxelPrototype.common.API.Blocks.State.BlockState}.Deserialize(VBF.VBFCompound)
references:
- uid: VoxelPrototype.common.API.Blocks.State
  commentId: N:VoxelPrototype.common.API.Blocks.State
  href: VoxelPrototype.html
  name: VoxelPrototype.common.API.Blocks.State
  nameWithType: VoxelPrototype.common.API.Blocks.State
  fullName: VoxelPrototype.common.API.Blocks.State
  spec.csharp:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.API
    name: API
    href: VoxelPrototype.common.API.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks
    name: Blocks
    href: VoxelPrototype.common.API.Blocks.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks.State
    name: State
    href: VoxelPrototype.common.API.Blocks.State.html
  spec.vb:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.API
    name: API
    href: VoxelPrototype.common.API.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks
    name: Blocks
    href: VoxelPrototype.common.API.Blocks.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks.State
    name: State
    href: VoxelPrototype.common.API.Blocks.State.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: VBF.IVBFSerializable{VoxelPrototype.common.API.Blocks.State.BlockState}
  commentId: T:VBF.IVBFSerializable{VoxelPrototype.common.API.Blocks.State.BlockState}
  parent: VBF
  definition: VBF.IVBFSerializable`1
  href: VBF.IVBFSerializable-1.html
  name: IVBFSerializable<BlockState>
  nameWithType: IVBFSerializable<BlockState>
  fullName: VBF.IVBFSerializable<VoxelPrototype.common.API.Blocks.State.BlockState>
  nameWithType.vb: IVBFSerializable(Of BlockState)
  fullName.vb: VBF.IVBFSerializable(Of VoxelPrototype.common.API.Blocks.State.BlockState)
  name.vb: IVBFSerializable(Of BlockState)
  spec.csharp:
  - uid: VBF.IVBFSerializable`1
    name: IVBFSerializable
    href: VBF.IVBFSerializable-1.html
  - name: <
  - uid: VoxelPrototype.common.API.Blocks.State.BlockState
    name: BlockState
    href: VoxelPrototype.common.API.Blocks.State.BlockState.html
  - name: '>'
  spec.vb:
  - uid: VBF.IVBFSerializable`1
    name: IVBFSerializable
    href: VBF.IVBFSerializable-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: VoxelPrototype.common.API.Blocks.State.BlockState
    name: BlockState
    href: VoxelPrototype.common.API.Blocks.State.BlockState.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VBF.IVBFSerializable`1
  commentId: T:VBF.IVBFSerializable`1
  href: VBF.IVBFSerializable-1.html
  name: IVBFSerializable<T>
  nameWithType: IVBFSerializable<T>
  fullName: VBF.IVBFSerializable<T>
  nameWithType.vb: IVBFSerializable(Of T)
  fullName.vb: VBF.IVBFSerializable(Of T)
  name.vb: IVBFSerializable(Of T)
  spec.csharp:
  - uid: VBF.IVBFSerializable`1
    name: IVBFSerializable
    href: VBF.IVBFSerializable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: VBF.IVBFSerializable`1
    name: IVBFSerializable
    href: VBF.IVBFSerializable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: VBF
  commentId: N:VBF
  href: VBF.html
  name: VBF
  nameWithType: VBF
  fullName: VBF
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.Block*
  commentId: Overload:VoxelPrototype.common.API.Blocks.State.BlockState.Block
  href: VoxelPrototype.common.API.Blocks.State.BlockState.html#VoxelPrototype_common_API_Blocks_State_BlockState_Block
  name: Block
  nameWithType: BlockState.Block
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.Block
- uid: VoxelPrototype.common.API.Blocks.Block
  commentId: T:VoxelPrototype.common.API.Blocks.Block
  parent: VoxelPrototype.common.API.Blocks
  href: VoxelPrototype.common.API.Blocks.Block.html
  name: Block
  nameWithType: Block
  fullName: VoxelPrototype.common.API.Blocks.Block
- uid: VoxelPrototype.common.API.Blocks
  commentId: N:VoxelPrototype.common.API.Blocks
  href: VoxelPrototype.html
  name: VoxelPrototype.common.API.Blocks
  nameWithType: VoxelPrototype.common.API.Blocks
  fullName: VoxelPrototype.common.API.Blocks
  spec.csharp:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.API
    name: API
    href: VoxelPrototype.common.API.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks
    name: Blocks
    href: VoxelPrototype.common.API.Blocks.html
  spec.vb:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.API
    name: API
    href: VoxelPrototype.common.API.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks
    name: Blocks
    href: VoxelPrototype.common.API.Blocks.html
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.ID*
  commentId: Overload:VoxelPrototype.common.API.Blocks.State.BlockState.ID
  href: VoxelPrototype.common.API.Blocks.State.BlockState.html#VoxelPrototype_common_API_Blocks_State_BlockState_ID
  name: ID
  nameWithType: BlockState.ID
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.ID
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.#ctor*
  commentId: Overload:VoxelPrototype.common.API.Blocks.State.BlockState.#ctor
  href: VoxelPrototype.common.API.Blocks.State.BlockState.html#VoxelPrototype_common_API_Blocks_State_BlockState__ctor
  name: BlockState
  nameWithType: BlockState.BlockState
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.BlockState
  nameWithType.vb: BlockState.New
  fullName.vb: VoxelPrototype.common.API.Blocks.State.BlockState.New
  name.vb: New
- uid: System.Collections.Generic.Dictionary{VoxelPrototype.common.API.Blocks.Properties.IProperty,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{VoxelPrototype.common.API.Blocks.Properties.IProperty,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<IProperty, object>
  nameWithType: Dictionary<IProperty, object>
  fullName: System.Collections.Generic.Dictionary<VoxelPrototype.common.API.Blocks.Properties.IProperty, object>
  nameWithType.vb: Dictionary(Of IProperty, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of VoxelPrototype.common.API.Blocks.Properties.IProperty, Object)
  name.vb: Dictionary(Of IProperty, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: VoxelPrototype.common.API.Blocks.Properties.IProperty
    name: IProperty
    href: VoxelPrototype.common.API.Blocks.Properties.IProperty.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: VoxelPrototype.common.API.Blocks.Properties.IProperty
    name: IProperty
    href: VoxelPrototype.common.API.Blocks.Properties.IProperty.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.Has*
  commentId: Overload:VoxelPrototype.common.API.Blocks.State.BlockState.Has
  href: VoxelPrototype.common.API.Blocks.State.BlockState.html#VoxelPrototype_common_API_Blocks_State_BlockState_Has_VoxelPrototype_common_API_Blocks_Properties_Property_System_Object__
  name: Has
  nameWithType: BlockState.Has
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.Has
- uid: VoxelPrototype.common.API.Blocks.Properties.Property{System.Object}
  commentId: T:VoxelPrototype.common.API.Blocks.Properties.Property{System.Object}
  parent: VoxelPrototype.common.API.Blocks.Properties
  definition: VoxelPrototype.common.API.Blocks.Properties.Property`1
  href: VoxelPrototype.common.API.Blocks.Properties.Property-1.html
  name: Property<object>
  nameWithType: Property<object>
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<object>
  nameWithType.vb: Property(Of Object)
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of Object)
  name.vb: Property(Of Object)
  spec.csharp:
  - uid: VoxelPrototype.common.API.Blocks.Properties.Property`1
    name: Property
    href: VoxelPrototype.common.API.Blocks.Properties.Property-1.html
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: VoxelPrototype.common.API.Blocks.Properties.Property`1
    name: Property
    href: VoxelPrototype.common.API.Blocks.Properties.Property-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: VoxelPrototype.common.API.Blocks.Properties.Property`1
  commentId: T:VoxelPrototype.common.API.Blocks.Properties.Property`1
  href: VoxelPrototype.common.API.Blocks.Properties.Property-1.html
  name: Property<T>
  nameWithType: Property<T>
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<T>
  nameWithType.vb: Property(Of T)
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of T)
  name.vb: Property(Of T)
  spec.csharp:
  - uid: VoxelPrototype.common.API.Blocks.Properties.Property`1
    name: Property
    href: VoxelPrototype.common.API.Blocks.Properties.Property-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: VoxelPrototype.common.API.Blocks.Properties.Property`1
    name: Property
    href: VoxelPrototype.common.API.Blocks.Properties.Property-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: VoxelPrototype.common.API.Blocks.Properties
  commentId: N:VoxelPrototype.common.API.Blocks.Properties
  href: VoxelPrototype.html
  name: VoxelPrototype.common.API.Blocks.Properties
  nameWithType: VoxelPrototype.common.API.Blocks.Properties
  fullName: VoxelPrototype.common.API.Blocks.Properties
  spec.csharp:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.API
    name: API
    href: VoxelPrototype.common.API.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks
    name: Blocks
    href: VoxelPrototype.common.API.Blocks.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks.Properties
    name: Properties
    href: VoxelPrototype.common.API.Blocks.Properties.html
  spec.vb:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.API
    name: API
    href: VoxelPrototype.common.API.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks
    name: Blocks
    href: VoxelPrototype.common.API.Blocks.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks.Properties
    name: Properties
    href: VoxelPrototype.common.API.Blocks.Properties.html
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.Get*
  commentId: Overload:VoxelPrototype.common.API.Blocks.State.BlockState.Get
  href: VoxelPrototype.common.API.Blocks.State.BlockState.html#VoxelPrototype_common_API_Blocks_State_BlockState_Get__1_VoxelPrototype_common_API_Blocks_Properties_Property___0__
  name: Get
  nameWithType: BlockState.Get
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.Get
- uid: VoxelPrototype.common.API.Blocks.Properties.Property{{T}}
  commentId: T:VoxelPrototype.common.API.Blocks.Properties.Property{``0}
  parent: VoxelPrototype.common.API.Blocks.Properties
  definition: VoxelPrototype.common.API.Blocks.Properties.Property`1
  href: VoxelPrototype.common.API.Blocks.Properties.Property-1.html
  name: Property<T>
  nameWithType: Property<T>
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<T>
  nameWithType.vb: Property(Of T)
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of T)
  name.vb: Property(Of T)
  spec.csharp:
  - uid: VoxelPrototype.common.API.Blocks.Properties.Property`1
    name: Property
    href: VoxelPrototype.common.API.Blocks.Properties.Property-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: VoxelPrototype.common.API.Blocks.Properties.Property`1
    name: Property
    href: VoxelPrototype.common.API.Blocks.Properties.Property-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.GetIntern*
  commentId: Overload:VoxelPrototype.common.API.Blocks.State.BlockState.GetIntern
  href: VoxelPrototype.common.API.Blocks.State.BlockState.html#VoxelPrototype_common_API_Blocks_State_BlockState_GetIntern__1_VoxelPrototype_common_API_Blocks_Properties_Property___0__
  name: GetIntern
  nameWithType: BlockState.GetIntern
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.GetIntern
- uid: System.ValueTuple{{T},VoxelPrototype.common.API.Blocks.Properties.IProperty}
  commentId: T:System.ValueTuple{``0,VoxelPrototype.common.API.Blocks.Properties.IProperty}
  parent: System
  definition: System.ValueTuple`2
  href: VoxelPrototype.common.API.Blocks.Properties.IProperty.html
  name: (T, IProperty)
  nameWithType: (T, IProperty)
  fullName: (T, VoxelPrototype.common.API.Blocks.Properties.IProperty)
  spec.csharp:
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: VoxelPrototype.common.API.Blocks.Properties.IProperty
    name: IProperty
    href: VoxelPrototype.common.API.Blocks.Properties.IProperty.html
  - name: )
  spec.vb:
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: VoxelPrototype.common.API.Blocks.Properties.IProperty
    name: IProperty
    href: VoxelPrototype.common.API.Blocks.Properties.IProperty.html
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.With*
  commentId: Overload:VoxelPrototype.common.API.Blocks.State.BlockState.With
  href: VoxelPrototype.common.API.Blocks.State.BlockState.html#VoxelPrototype_common_API_Blocks_State_BlockState_With__1_VoxelPrototype_common_API_Blocks_Properties_Property___0____0_
  name: With
  nameWithType: BlockState.With
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.With
- uid: VoxelPrototype.common.API.Blocks.State.BlockState
  commentId: T:VoxelPrototype.common.API.Blocks.State.BlockState
  parent: VoxelPrototype.common.API.Blocks.State
  href: VoxelPrototype.common.API.Blocks.State.BlockState.html
  name: BlockState
  nameWithType: BlockState
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.WithRaw*
  commentId: Overload:VoxelPrototype.common.API.Blocks.State.BlockState.WithRaw
  href: VoxelPrototype.common.API.Blocks.State.BlockState.html#VoxelPrototype_common_API_Blocks_State_BlockState_WithRaw__1_VoxelPrototype_common_API_Blocks_Properties_Property___0__System_Object_
  name: WithRaw
  nameWithType: BlockState.WithRaw
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.WithRaw
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.Equals*
  commentId: Overload:VoxelPrototype.common.API.Blocks.State.BlockState.Equals
  href: VoxelPrototype.common.API.Blocks.State.BlockState.html#VoxelPrototype_common_API_Blocks_State_BlockState_Equals_System_Object_
  name: Equals
  nameWithType: BlockState.Equals
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.Equals
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.ToString*
  commentId: Overload:VoxelPrototype.common.API.Blocks.State.BlockState.ToString
  href: VoxelPrototype.common.API.Blocks.State.BlockState.html#VoxelPrototype_common_API_Blocks_State_BlockState_ToString
  name: ToString
  nameWithType: BlockState.ToString
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.SetAllStates*
  commentId: Overload:VoxelPrototype.common.API.Blocks.State.BlockState.SetAllStates
  href: VoxelPrototype.common.API.Blocks.State.BlockState.html#VoxelPrototype_common_API_Blocks_State_BlockState_SetAllStates_System_Collections_Generic_Dictionary_System_ValueTuple_VoxelPrototype_common_API_Blocks_Properties_IProperty_System_Object__VoxelPrototype_common_API_Blocks_State_BlockState__
  name: SetAllStates
  nameWithType: BlockState.SetAllStates
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.SetAllStates
- uid: System.Collections.Generic.Dictionary{System.ValueTuple{VoxelPrototype.common.API.Blocks.Properties.IProperty,System.Object},VoxelPrototype.common.API.Blocks.State.BlockState}
  commentId: T:System.Collections.Generic.Dictionary{System.ValueTuple{VoxelPrototype.common.API.Blocks.Properties.IProperty,System.Object},VoxelPrototype.common.API.Blocks.State.BlockState}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<(IProperty, object), BlockState>
  nameWithType: Dictionary<(IProperty, object), BlockState>
  fullName: System.Collections.Generic.Dictionary<(VoxelPrototype.common.API.Blocks.Properties.IProperty, object), VoxelPrototype.common.API.Blocks.State.BlockState>
  nameWithType.vb: Dictionary(Of (IProperty, Object), BlockState)
  fullName.vb: System.Collections.Generic.Dictionary(Of (VoxelPrototype.common.API.Blocks.Properties.IProperty, Object), VoxelPrototype.common.API.Blocks.State.BlockState)
  name.vb: Dictionary(Of (IProperty, Object), BlockState)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: (
  - uid: VoxelPrototype.common.API.Blocks.Properties.IProperty
    name: IProperty
    href: VoxelPrototype.common.API.Blocks.Properties.IProperty.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: ','
  - name: " "
  - uid: VoxelPrototype.common.API.Blocks.State.BlockState
    name: BlockState
    href: VoxelPrototype.common.API.Blocks.State.BlockState.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: VoxelPrototype.common.API.Blocks.Properties.IProperty
    name: IProperty
    href: VoxelPrototype.common.API.Blocks.Properties.IProperty.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: ','
  - name: " "
  - uid: VoxelPrototype.common.API.Blocks.State.BlockState
    name: BlockState
    href: VoxelPrototype.common.API.Blocks.State.BlockState.html
  - name: )
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.Serialize*
  commentId: Overload:VoxelPrototype.common.API.Blocks.State.BlockState.Serialize
  href: VoxelPrototype.common.API.Blocks.State.BlockState.html#VoxelPrototype_common_API_Blocks_State_BlockState_Serialize
  name: Serialize
  nameWithType: BlockState.Serialize
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.Serialize
- uid: VBF.IVBFSerializable{VoxelPrototype.common.API.Blocks.State.BlockState}.Serialize
  commentId: M:VBF.IVBFSerializable{VoxelPrototype.common.API.Blocks.State.BlockState}.Serialize
  parent: VBF.IVBFSerializable{VoxelPrototype.common.API.Blocks.State.BlockState}
  definition: VBF.IVBFSerializable`1.Serialize
  href: VBF.IVBFSerializable-1.html#VBF_IVBFSerializable_1_Serialize
  name: Serialize()
  nameWithType: IVBFSerializable<BlockState>.Serialize()
  fullName: VBF.IVBFSerializable<VoxelPrototype.common.API.Blocks.State.BlockState>.Serialize()
  nameWithType.vb: IVBFSerializable(Of BlockState).Serialize()
  fullName.vb: VBF.IVBFSerializable(Of VoxelPrototype.common.API.Blocks.State.BlockState).Serialize()
  spec.csharp:
  - uid: VBF.IVBFSerializable{VoxelPrototype.common.API.Blocks.State.BlockState}.Serialize
    name: Serialize
    href: VBF.IVBFSerializable-1.html#VBF_IVBFSerializable_1_Serialize
  - name: (
  - name: )
  spec.vb:
  - uid: VBF.IVBFSerializable{VoxelPrototype.common.API.Blocks.State.BlockState}.Serialize
    name: Serialize
    href: VBF.IVBFSerializable-1.html#VBF_IVBFSerializable_1_Serialize
  - name: (
  - name: )
- uid: VBF.VBFCompound
  commentId: T:VBF.VBFCompound
  parent: VBF
  href: VBF.VBFCompound.html
  name: VBFCompound
  nameWithType: VBFCompound
  fullName: VBF.VBFCompound
- uid: VBF.IVBFSerializable`1.Serialize
  commentId: M:VBF.IVBFSerializable`1.Serialize
  href: VBF.IVBFSerializable-1.html#VBF_IVBFSerializable_1_Serialize
  name: Serialize()
  nameWithType: IVBFSerializable<T>.Serialize()
  fullName: VBF.IVBFSerializable<T>.Serialize()
  nameWithType.vb: IVBFSerializable(Of T).Serialize()
  fullName.vb: VBF.IVBFSerializable(Of T).Serialize()
  spec.csharp:
  - uid: VBF.IVBFSerializable`1.Serialize
    name: Serialize
    href: VBF.IVBFSerializable-1.html#VBF_IVBFSerializable_1_Serialize
  - name: (
  - name: )
  spec.vb:
  - uid: VBF.IVBFSerializable`1.Serialize
    name: Serialize
    href: VBF.IVBFSerializable-1.html#VBF_IVBFSerializable_1_Serialize
  - name: (
  - name: )
- uid: VoxelPrototype.common.API.Blocks.State.BlockState.Deserialize*
  commentId: Overload:VoxelPrototype.common.API.Blocks.State.BlockState.Deserialize
  href: VoxelPrototype.common.API.Blocks.State.BlockState.html#VoxelPrototype_common_API_Blocks_State_BlockState_Deserialize_VBF_VBFCompound_
  name: Deserialize
  nameWithType: BlockState.Deserialize
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState.Deserialize
- uid: VBF.IVBFSerializable{VoxelPrototype.common.API.Blocks.State.BlockState}.Deserialize(VBF.VBFCompound)
  commentId: M:VBF.IVBFSerializable{VoxelPrototype.common.API.Blocks.State.BlockState}.Deserialize(VBF.VBFCompound)
  parent: VBF.IVBFSerializable{VoxelPrototype.common.API.Blocks.State.BlockState}
  definition: VBF.IVBFSerializable`1.Deserialize(VBF.VBFCompound)
  href: VBF.IVBFSerializable-1.html#VBF_IVBFSerializable_1_Deserialize_VBF_VBFCompound_
  name: Deserialize(VBFCompound)
  nameWithType: IVBFSerializable<BlockState>.Deserialize(VBFCompound)
  fullName: VBF.IVBFSerializable<VoxelPrototype.common.API.Blocks.State.BlockState>.Deserialize(VBF.VBFCompound)
  nameWithType.vb: IVBFSerializable(Of BlockState).Deserialize(VBFCompound)
  fullName.vb: VBF.IVBFSerializable(Of VoxelPrototype.common.API.Blocks.State.BlockState).Deserialize(VBF.VBFCompound)
  spec.csharp:
  - uid: VBF.IVBFSerializable{VoxelPrototype.common.API.Blocks.State.BlockState}.Deserialize(VBF.VBFCompound)
    name: Deserialize
    href: VBF.IVBFSerializable-1.html#VBF_IVBFSerializable_1_Deserialize_VBF_VBFCompound_
  - name: (
  - uid: VBF.VBFCompound
    name: VBFCompound
    href: VBF.VBFCompound.html
  - name: )
  spec.vb:
  - uid: VBF.IVBFSerializable{VoxelPrototype.common.API.Blocks.State.BlockState}.Deserialize(VBF.VBFCompound)
    name: Deserialize
    href: VBF.IVBFSerializable-1.html#VBF_IVBFSerializable_1_Deserialize_VBF_VBFCompound_
  - name: (
  - uid: VBF.VBFCompound
    name: VBFCompound
    href: VBF.VBFCompound.html
  - name: )
- uid: VBF.IVBFSerializable`1.Deserialize(VBF.VBFCompound)
  commentId: M:VBF.IVBFSerializable`1.Deserialize(VBF.VBFCompound)
  href: VBF.IVBFSerializable-1.html#VBF_IVBFSerializable_1_Deserialize_VBF_VBFCompound_
  name: Deserialize(VBFCompound)
  nameWithType: IVBFSerializable<T>.Deserialize(VBFCompound)
  fullName: VBF.IVBFSerializable<T>.Deserialize(VBF.VBFCompound)
  nameWithType.vb: IVBFSerializable(Of T).Deserialize(VBFCompound)
  fullName.vb: VBF.IVBFSerializable(Of T).Deserialize(VBF.VBFCompound)
  spec.csharp:
  - uid: VBF.IVBFSerializable`1.Deserialize(VBF.VBFCompound)
    name: Deserialize
    href: VBF.IVBFSerializable-1.html#VBF_IVBFSerializable_1_Deserialize_VBF_VBFCompound_
  - name: (
  - uid: VBF.VBFCompound
    name: VBFCompound
    href: VBF.VBFCompound.html
  - name: )
  spec.vb:
  - uid: VBF.IVBFSerializable`1.Deserialize(VBF.VBFCompound)
    name: Deserialize
    href: VBF.IVBFSerializable-1.html#VBF_IVBFSerializable_1_Deserialize_VBF_VBFCompound_
  - name: (
  - uid: VBF.VBFCompound
    name: VBFCompound
    href: VBF.VBFCompound.html
  - name: )
