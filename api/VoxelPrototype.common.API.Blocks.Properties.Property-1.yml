### YamlMime:ManagedReference
items:
- uid: VoxelPrototype.common.API.Blocks.Properties.Property`1
  commentId: T:VoxelPrototype.common.API.Blocks.Properties.Property`1
  id: Property`1
  parent: VoxelPrototype.common.API.Blocks.Properties
  children:
  - VoxelPrototype.common.API.Blocks.Properties.Property`1.#ctor(System.String)
  - VoxelPrototype.common.API.Blocks.Properties.Property`1.DefaultValue
  - VoxelPrototype.common.API.Blocks.Properties.Property`1.Equals(System.Object)
  - VoxelPrototype.common.API.Blocks.Properties.Property`1.GetAllValues
  - VoxelPrototype.common.API.Blocks.Properties.Property`1.GetValueFromString(System.String)
  - VoxelPrototype.common.API.Blocks.Properties.Property`1.GetValueString(`0)
  - VoxelPrototype.common.API.Blocks.Properties.Property`1.Name
  langs:
  - csharp
  - vb
  name: Property<T>
  nameWithType: Property<T>
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<T>
  type: Class
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/Properties/Property.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: Property
    path: VoxelPrototype/common/API/Blocks/Properties/Property.cs
    startLine: 8
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.Properties
  syntax:
    content: 'public class Property<T> : IProperty'
    typeParameters:
    - id: T
    content.vb: Public Class [Property](Of T) Implements IProperty
  inheritance:
  - System.Object
  derivedClasses:
  - VoxelPrototype.common.API.Blocks.Properties.BooleanProperty
  implements:
  - VoxelPrototype.common.API.Blocks.Properties.IProperty
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Property(Of T)
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of T)
  name.vb: Property(Of T)
- uid: VoxelPrototype.common.API.Blocks.Properties.Property`1.Name
  commentId: P:VoxelPrototype.common.API.Blocks.Properties.Property`1.Name
  id: Name
  parent: VoxelPrototype.common.API.Blocks.Properties.Property`1
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Property<T>.Name
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<T>.Name
  type: Property
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/Properties/Property.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: Name
    path: VoxelPrototype/common/API/Blocks/Properties/Property.cs
    startLine: 10
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.Properties
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: VoxelPrototype.common.API.Blocks.Properties.Property`1.Name*
  implements:
  - VoxelPrototype.common.API.Blocks.Properties.IProperty.Name
  nameWithType.vb: Property(Of T).Name
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of T).Name
- uid: VoxelPrototype.common.API.Blocks.Properties.Property`1.#ctor(System.String)
  commentId: M:VoxelPrototype.common.API.Blocks.Properties.Property`1.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: VoxelPrototype.common.API.Blocks.Properties.Property`1
  langs:
  - csharp
  - vb
  name: Property(string)
  nameWithType: Property<T>.Property(string)
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<T>.Property(string)
  type: Constructor
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/Properties/Property.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: .ctor
    path: VoxelPrototype/common/API/Blocks/Properties/Property.cs
    startLine: 12
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.Properties
  syntax:
    content: public Property(string Name)
    parameters:
    - id: Name
      type: System.String
    content.vb: Public Sub New(Name As String)
  overload: VoxelPrototype.common.API.Blocks.Properties.Property`1.#ctor*
  nameWithType.vb: Property(Of T).New(String)
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of T).New(String)
  name.vb: New(String)
- uid: VoxelPrototype.common.API.Blocks.Properties.Property`1.Equals(System.Object)
  commentId: M:VoxelPrototype.common.API.Blocks.Properties.Property`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: VoxelPrototype.common.API.Blocks.Properties.Property`1
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Property<T>.Equals(object)
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<T>.Equals(object)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/Properties/Property.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: Equals
    path: VoxelPrototype/common/API/Blocks/Properties/Property.cs
    startLine: 16
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.Properties
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: VoxelPrototype.common.API.Blocks.Properties.Property`1.Equals*
  nameWithType.vb: Property(Of T).Equals(Object)
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of T).Equals(Object)
  name.vb: Equals(Object)
- uid: VoxelPrototype.common.API.Blocks.Properties.Property`1.GetAllValues
  commentId: M:VoxelPrototype.common.API.Blocks.Properties.Property`1.GetAllValues
  id: GetAllValues
  parent: VoxelPrototype.common.API.Blocks.Properties.Property`1
  langs:
  - csharp
  - vb
  name: GetAllValues()
  nameWithType: Property<T>.GetAllValues()
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<T>.GetAllValues()
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/Properties/Property.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: GetAllValues
    path: VoxelPrototype/common/API/Blocks/Properties/Property.cs
    startLine: 23
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.Properties
  syntax:
    content: public virtual List<T> GetAllValues()
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Public Overridable Function GetAllValues() As List(Of T)
  overload: VoxelPrototype.common.API.Blocks.Properties.Property`1.GetAllValues*
  nameWithType.vb: Property(Of T).GetAllValues()
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of T).GetAllValues()
- uid: VoxelPrototype.common.API.Blocks.Properties.Property`1.GetValueString(`0)
  commentId: M:VoxelPrototype.common.API.Blocks.Properties.Property`1.GetValueString(`0)
  id: GetValueString(`0)
  parent: VoxelPrototype.common.API.Blocks.Properties.Property`1
  langs:
  - csharp
  - vb
  name: GetValueString(T)
  nameWithType: Property<T>.GetValueString(T)
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<T>.GetValueString(T)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/Properties/Property.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: GetValueString
    path: VoxelPrototype/common/API/Blocks/Properties/Property.cs
    startLine: 28
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.Properties
  syntax:
    content: public virtual string GetValueString(T value)
    parameters:
    - id: value
      type: '{T}'
    return:
      type: System.String
    content.vb: Public Overridable Function GetValueString(value As T) As String
  overload: VoxelPrototype.common.API.Blocks.Properties.Property`1.GetValueString*
  nameWithType.vb: Property(Of T).GetValueString(T)
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of T).GetValueString(T)
- uid: VoxelPrototype.common.API.Blocks.Properties.Property`1.GetValueFromString(System.String)
  commentId: M:VoxelPrototype.common.API.Blocks.Properties.Property`1.GetValueFromString(System.String)
  id: GetValueFromString(System.String)
  parent: VoxelPrototype.common.API.Blocks.Properties.Property`1
  langs:
  - csharp
  - vb
  name: GetValueFromString(string)
  nameWithType: Property<T>.GetValueFromString(string)
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<T>.GetValueFromString(string)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/Properties/Property.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: GetValueFromString
    path: VoxelPrototype/common/API/Blocks/Properties/Property.cs
    startLine: 33
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.Properties
  syntax:
    content: public virtual T GetValueFromString(string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: '{T}'
    content.vb: Public Overridable Function GetValueFromString(value As String) As T
  overload: VoxelPrototype.common.API.Blocks.Properties.Property`1.GetValueFromString*
  nameWithType.vb: Property(Of T).GetValueFromString(String)
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of T).GetValueFromString(String)
  name.vb: GetValueFromString(String)
- uid: VoxelPrototype.common.API.Blocks.Properties.Property`1.DefaultValue
  commentId: M:VoxelPrototype.common.API.Blocks.Properties.Property`1.DefaultValue
  id: DefaultValue
  parent: VoxelPrototype.common.API.Blocks.Properties.Property`1
  langs:
  - csharp
  - vb
  name: DefaultValue()
  nameWithType: Property<T>.DefaultValue()
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<T>.DefaultValue()
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/API/Blocks/Properties/Property.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: DefaultValue
    path: VoxelPrototype/common/API/Blocks/Properties/Property.cs
    startLine: 38
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.API.Blocks.Properties
  syntax:
    content: public virtual T DefaultValue()
    return:
      type: '{T}'
    content.vb: Public Overridable Function DefaultValue() As T
  overload: VoxelPrototype.common.API.Blocks.Properties.Property`1.DefaultValue*
  nameWithType.vb: Property(Of T).DefaultValue()
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of T).DefaultValue()
references:
- uid: VoxelPrototype.common.API.Blocks.Properties
  commentId: N:VoxelPrototype.common.API.Blocks.Properties
  href: VoxelPrototype.html
  name: VoxelPrototype.common.API.Blocks.Properties
  nameWithType: VoxelPrototype.common.API.Blocks.Properties
  fullName: VoxelPrototype.common.API.Blocks.Properties
  spec.csharp:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.API
    name: API
    href: VoxelPrototype.common.API.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks
    name: Blocks
    href: VoxelPrototype.common.API.Blocks.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks.Properties
    name: Properties
    href: VoxelPrototype.common.API.Blocks.Properties.html
  spec.vb:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.API
    name: API
    href: VoxelPrototype.common.API.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks
    name: Blocks
    href: VoxelPrototype.common.API.Blocks.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks.Properties
    name: Properties
    href: VoxelPrototype.common.API.Blocks.Properties.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: VoxelPrototype.common.API.Blocks.Properties.IProperty
  commentId: T:VoxelPrototype.common.API.Blocks.Properties.IProperty
  parent: VoxelPrototype.common.API.Blocks.Properties
  href: VoxelPrototype.common.API.Blocks.Properties.IProperty.html
  name: IProperty
  nameWithType: IProperty
  fullName: VoxelPrototype.common.API.Blocks.Properties.IProperty
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VoxelPrototype.common.API.Blocks.Properties.Property`1.Name*
  commentId: Overload:VoxelPrototype.common.API.Blocks.Properties.Property`1.Name
  href: VoxelPrototype.common.API.Blocks.Properties.Property-1.html#VoxelPrototype_common_API_Blocks_Properties_Property_1_Name
  name: Name
  nameWithType: Property<T>.Name
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<T>.Name
  nameWithType.vb: Property(Of T).Name
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of T).Name
- uid: VoxelPrototype.common.API.Blocks.Properties.IProperty.Name
  commentId: P:VoxelPrototype.common.API.Blocks.Properties.IProperty.Name
  parent: VoxelPrototype.common.API.Blocks.Properties.IProperty
  href: VoxelPrototype.common.API.Blocks.Properties.IProperty.html#VoxelPrototype_common_API_Blocks_Properties_IProperty_Name
  name: Name
  nameWithType: IProperty.Name
  fullName: VoxelPrototype.common.API.Blocks.Properties.IProperty.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: VoxelPrototype.common.API.Blocks.Properties.Property`1.#ctor*
  commentId: Overload:VoxelPrototype.common.API.Blocks.Properties.Property`1.#ctor
  href: VoxelPrototype.common.API.Blocks.Properties.Property-1.html#VoxelPrototype_common_API_Blocks_Properties_Property_1__ctor_System_String_
  name: Property
  nameWithType: Property<T>.Property
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<T>.Property
  nameWithType.vb: Property(Of T).New
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of T).New
  name.vb: New
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: VoxelPrototype.common.API.Blocks.Properties.Property`1.Equals*
  commentId: Overload:VoxelPrototype.common.API.Blocks.Properties.Property`1.Equals
  href: VoxelPrototype.common.API.Blocks.Properties.Property-1.html#VoxelPrototype_common_API_Blocks_Properties_Property_1_Equals_System_Object_
  name: Equals
  nameWithType: Property<T>.Equals
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<T>.Equals
  nameWithType.vb: Property(Of T).Equals
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of T).Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: VoxelPrototype.common.API.Blocks.Properties.Property`1.GetAllValues*
  commentId: Overload:VoxelPrototype.common.API.Blocks.Properties.Property`1.GetAllValues
  href: VoxelPrototype.common.API.Blocks.Properties.Property-1.html#VoxelPrototype_common_API_Blocks_Properties_Property_1_GetAllValues
  name: GetAllValues
  nameWithType: Property<T>.GetAllValues
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<T>.GetAllValues
  nameWithType.vb: Property(Of T).GetAllValues
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of T).GetAllValues
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: VoxelPrototype.common.API.Blocks.Properties.Property`1.GetValueString*
  commentId: Overload:VoxelPrototype.common.API.Blocks.Properties.Property`1.GetValueString
  href: VoxelPrototype.common.API.Blocks.Properties.Property-1.html#VoxelPrototype_common_API_Blocks_Properties_Property_1_GetValueString__0_
  name: GetValueString
  nameWithType: Property<T>.GetValueString
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<T>.GetValueString
  nameWithType.vb: Property(Of T).GetValueString
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of T).GetValueString
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VoxelPrototype.common.API.Blocks.Properties.Property`1.GetValueFromString*
  commentId: Overload:VoxelPrototype.common.API.Blocks.Properties.Property`1.GetValueFromString
  href: VoxelPrototype.common.API.Blocks.Properties.Property-1.html#VoxelPrototype_common_API_Blocks_Properties_Property_1_GetValueFromString_System_String_
  name: GetValueFromString
  nameWithType: Property<T>.GetValueFromString
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<T>.GetValueFromString
  nameWithType.vb: Property(Of T).GetValueFromString
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of T).GetValueFromString
- uid: VoxelPrototype.common.API.Blocks.Properties.Property`1.DefaultValue*
  commentId: Overload:VoxelPrototype.common.API.Blocks.Properties.Property`1.DefaultValue
  href: VoxelPrototype.common.API.Blocks.Properties.Property-1.html#VoxelPrototype_common_API_Blocks_Properties_Property_1_DefaultValue
  name: DefaultValue
  nameWithType: Property<T>.DefaultValue
  fullName: VoxelPrototype.common.API.Blocks.Properties.Property<T>.DefaultValue
  nameWithType.vb: Property(Of T).DefaultValue
  fullName.vb: VoxelPrototype.common.API.Blocks.Properties.Property(Of T).DefaultValue
