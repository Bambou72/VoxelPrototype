### YamlMime:ManagedReference
items:
- uid: VoxelPrototype.common.Game.World.World
  commentId: T:VoxelPrototype.common.Game.World.World
  id: World
  parent: VoxelPrototype.common.Game.World
  children:
  - VoxelPrototype.common.Game.World.World.Dispose
  - VoxelPrototype.common.Game.World.World.GetBlock(System.Int32,System.Int32,System.Int32)
  - VoxelPrototype.common.Game.World.World.GetChunk(System.Int32,System.Int32)
  - VoxelPrototype.common.Game.World.World.IsAir(System.Int32,System.Int32,System.Int32)
  - VoxelPrototype.common.Game.World.World.IsChunkExist(System.Int32,System.Int32)
  - VoxelPrototype.common.Game.World.World.IsTransparent(System.Int32,System.Int32,System.Int32)
  - VoxelPrototype.common.Game.World.World.SetBlock(System.Int32,System.Int32,System.Int32,VoxelPrototype.common.API.Blocks.State.BlockState)
  - VoxelPrototype.common.Game.World.World.Tick
  langs:
  - csharp
  - vb
  name: World
  nameWithType: World
  fullName: VoxelPrototype.common.Game.World.World
  type: Class
  source:
    remote:
      path: VoxelPrototype/common/Game/World/World.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: World
    path: VoxelPrototype/common/Game/World/World.cs
    startLine: 4
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.Game.World
  syntax:
    content: 'public class World : IBlockAcessor, ITickable'
    content.vb: Public Class World Implements IBlockAcessor, ITickable
  inheritance:
  - System.Object
  derivedClasses:
  - VoxelPrototype.common.Game.World.ClientWorld
  - VoxelPrototype.common.Game.World.ServerWorld
  implements:
  - VoxelPrototype.common.Game.IBlockAcessor
  - VoxelPrototype.common.Game.ITickable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: VoxelPrototype.common.Game.World.World.Dispose
  commentId: M:VoxelPrototype.common.Game.World.World.Dispose
  id: Dispose
  parent: VoxelPrototype.common.Game.World.World
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: World.Dispose()
  fullName: VoxelPrototype.common.Game.World.World.Dispose()
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/Game/World/World.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: Dispose
    path: VoxelPrototype/common/Game/World/World.cs
    startLine: 14
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.Game.World
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose()
  overload: VoxelPrototype.common.Game.World.World.Dispose*
- uid: VoxelPrototype.common.Game.World.World.Tick
  commentId: M:VoxelPrototype.common.Game.World.World.Tick
  id: Tick
  parent: VoxelPrototype.common.Game.World.World
  langs:
  - csharp
  - vb
  name: Tick()
  nameWithType: World.Tick()
  fullName: VoxelPrototype.common.Game.World.World.Tick()
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/Game/World/World.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: Tick
    path: VoxelPrototype/common/Game/World/World.cs
    startLine: 15
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.Game.World
  example: []
  syntax:
    content: public virtual void Tick()
    content.vb: Public Overridable Sub Tick()
  overload: VoxelPrototype.common.Game.World.World.Tick*
  implements:
  - VoxelPrototype.common.Game.ITickable.Tick
- uid: VoxelPrototype.common.Game.World.World.GetBlock(System.Int32,System.Int32,System.Int32)
  commentId: M:VoxelPrototype.common.Game.World.World.GetBlock(System.Int32,System.Int32,System.Int32)
  id: GetBlock(System.Int32,System.Int32,System.Int32)
  parent: VoxelPrototype.common.Game.World.World
  langs:
  - csharp
  - vb
  name: GetBlock(int, int, int)
  nameWithType: World.GetBlock(int, int, int)
  fullName: VoxelPrototype.common.Game.World.World.GetBlock(int, int, int)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/Game/World/World.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: GetBlock
    path: VoxelPrototype/common/Game/World/World.cs
    startLine: 20
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.Game.World
  example: []
  syntax:
    content: public virtual BlockState GetBlock(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: z
      type: System.Int32
    return:
      type: VoxelPrototype.common.API.Blocks.State.BlockState
    content.vb: Public Overridable Function GetBlock(x As Integer, y As Integer, z As Integer) As BlockState
  overload: VoxelPrototype.common.Game.World.World.GetBlock*
  implements:
  - VoxelPrototype.common.Game.IBlockAcessor.GetBlock(System.Int32,System.Int32,System.Int32)
  nameWithType.vb: World.GetBlock(Integer, Integer, Integer)
  fullName.vb: VoxelPrototype.common.Game.World.World.GetBlock(Integer, Integer, Integer)
  name.vb: GetBlock(Integer, Integer, Integer)
- uid: VoxelPrototype.common.Game.World.World.IsAir(System.Int32,System.Int32,System.Int32)
  commentId: M:VoxelPrototype.common.Game.World.World.IsAir(System.Int32,System.Int32,System.Int32)
  id: IsAir(System.Int32,System.Int32,System.Int32)
  parent: VoxelPrototype.common.Game.World.World
  langs:
  - csharp
  - vb
  name: IsAir(int, int, int)
  nameWithType: World.IsAir(int, int, int)
  fullName: VoxelPrototype.common.Game.World.World.IsAir(int, int, int)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/Game/World/World.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: IsAir
    path: VoxelPrototype/common/Game/World/World.cs
    startLine: 25
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.Game.World
  example: []
  syntax:
    content: public virtual bool IsAir(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: z
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsAir(x As Integer, y As Integer, z As Integer) As Boolean
  overload: VoxelPrototype.common.Game.World.World.IsAir*
  implements:
  - VoxelPrototype.common.Game.IBlockAcessor.IsAir(System.Int32,System.Int32,System.Int32)
  nameWithType.vb: World.IsAir(Integer, Integer, Integer)
  fullName.vb: VoxelPrototype.common.Game.World.World.IsAir(Integer, Integer, Integer)
  name.vb: IsAir(Integer, Integer, Integer)
- uid: VoxelPrototype.common.Game.World.World.IsTransparent(System.Int32,System.Int32,System.Int32)
  commentId: M:VoxelPrototype.common.Game.World.World.IsTransparent(System.Int32,System.Int32,System.Int32)
  id: IsTransparent(System.Int32,System.Int32,System.Int32)
  parent: VoxelPrototype.common.Game.World.World
  langs:
  - csharp
  - vb
  name: IsTransparent(int, int, int)
  nameWithType: World.IsTransparent(int, int, int)
  fullName: VoxelPrototype.common.Game.World.World.IsTransparent(int, int, int)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/Game/World/World.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: IsTransparent
    path: VoxelPrototype/common/Game/World/World.cs
    startLine: 30
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.Game.World
  example: []
  syntax:
    content: public virtual bool IsTransparent(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: z
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsTransparent(x As Integer, y As Integer, z As Integer) As Boolean
  overload: VoxelPrototype.common.Game.World.World.IsTransparent*
  implements:
  - VoxelPrototype.common.Game.IBlockAcessor.IsTransparent(System.Int32,System.Int32,System.Int32)
  nameWithType.vb: World.IsTransparent(Integer, Integer, Integer)
  fullName.vb: VoxelPrototype.common.Game.World.World.IsTransparent(Integer, Integer, Integer)
  name.vb: IsTransparent(Integer, Integer, Integer)
- uid: VoxelPrototype.common.Game.World.World.IsChunkExist(System.Int32,System.Int32)
  commentId: M:VoxelPrototype.common.Game.World.World.IsChunkExist(System.Int32,System.Int32)
  id: IsChunkExist(System.Int32,System.Int32)
  parent: VoxelPrototype.common.Game.World.World
  langs:
  - csharp
  - vb
  name: IsChunkExist(int, int)
  nameWithType: World.IsChunkExist(int, int)
  fullName: VoxelPrototype.common.Game.World.World.IsChunkExist(int, int)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/Game/World/World.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: IsChunkExist
    path: VoxelPrototype/common/Game/World/World.cs
    startLine: 35
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.Game.World
  example: []
  syntax:
    content: public virtual bool IsChunkExist(int x, int z)
    parameters:
    - id: x
      type: System.Int32
    - id: z
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsChunkExist(x As Integer, z As Integer) As Boolean
  overload: VoxelPrototype.common.Game.World.World.IsChunkExist*
  nameWithType.vb: World.IsChunkExist(Integer, Integer)
  fullName.vb: VoxelPrototype.common.Game.World.World.IsChunkExist(Integer, Integer)
  name.vb: IsChunkExist(Integer, Integer)
- uid: VoxelPrototype.common.Game.World.World.GetChunk(System.Int32,System.Int32)
  commentId: M:VoxelPrototype.common.Game.World.World.GetChunk(System.Int32,System.Int32)
  id: GetChunk(System.Int32,System.Int32)
  parent: VoxelPrototype.common.Game.World.World
  langs:
  - csharp
  - vb
  name: GetChunk(int, int)
  nameWithType: World.GetChunk(int, int)
  fullName: VoxelPrototype.common.Game.World.World.GetChunk(int, int)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/Game/World/World.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: GetChunk
    path: VoxelPrototype/common/Game/World/World.cs
    startLine: 40
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.Game.World
  example: []
  syntax:
    content: public virtual Chunk GetChunk(int x, int z)
    parameters:
    - id: x
      type: System.Int32
    - id: z
      type: System.Int32
    return:
      type: VoxelPrototype.common.Game.World.Chunk
    content.vb: Public Overridable Function GetChunk(x As Integer, z As Integer) As Chunk
  overload: VoxelPrototype.common.Game.World.World.GetChunk*
  nameWithType.vb: World.GetChunk(Integer, Integer)
  fullName.vb: VoxelPrototype.common.Game.World.World.GetChunk(Integer, Integer)
  name.vb: GetChunk(Integer, Integer)
- uid: VoxelPrototype.common.Game.World.World.SetBlock(System.Int32,System.Int32,System.Int32,VoxelPrototype.common.API.Blocks.State.BlockState)
  commentId: M:VoxelPrototype.common.Game.World.World.SetBlock(System.Int32,System.Int32,System.Int32,VoxelPrototype.common.API.Blocks.State.BlockState)
  id: SetBlock(System.Int32,System.Int32,System.Int32,VoxelPrototype.common.API.Blocks.State.BlockState)
  parent: VoxelPrototype.common.Game.World.World
  langs:
  - csharp
  - vb
  name: SetBlock(int, int, int, BlockState)
  nameWithType: World.SetBlock(int, int, int, BlockState)
  fullName: VoxelPrototype.common.Game.World.World.SetBlock(int, int, int, VoxelPrototype.common.API.Blocks.State.BlockState)
  type: Method
  source:
    remote:
      path: VoxelPrototype/common/Game/World/World.cs
      branch: master
      repo: https://github.com/Bambou72/VoxelPrototype.git
    id: SetBlock
    path: VoxelPrototype/common/Game/World/World.cs
    startLine: 45
  assemblies:
  - VoxelPrototype
  namespace: VoxelPrototype.common.Game.World
  example: []
  syntax:
    content: public virtual void SetBlock(int x, int y, int z, BlockState State)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: z
      type: System.Int32
    - id: State
      type: VoxelPrototype.common.API.Blocks.State.BlockState
    content.vb: Public Overridable Sub SetBlock(x As Integer, y As Integer, z As Integer, State As BlockState)
  overload: VoxelPrototype.common.Game.World.World.SetBlock*
  implements:
  - VoxelPrototype.common.Game.IBlockAcessor.SetBlock(System.Int32,System.Int32,System.Int32,VoxelPrototype.common.API.Blocks.State.BlockState)
  nameWithType.vb: World.SetBlock(Integer, Integer, Integer, BlockState)
  fullName.vb: VoxelPrototype.common.Game.World.World.SetBlock(Integer, Integer, Integer, VoxelPrototype.common.API.Blocks.State.BlockState)
  name.vb: SetBlock(Integer, Integer, Integer, BlockState)
references:
- uid: VoxelPrototype.common.Game.World
  commentId: N:VoxelPrototype.common.Game.World
  href: VoxelPrototype.html
  name: VoxelPrototype.common.Game.World
  nameWithType: VoxelPrototype.common.Game.World
  fullName: VoxelPrototype.common.Game.World
  spec.csharp:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.Game
    name: Game
    href: VoxelPrototype.common.Game.html
  - name: .
  - uid: VoxelPrototype.common.Game.World
    name: World
    href: VoxelPrototype.common.Game.World.html
  spec.vb:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.Game
    name: Game
    href: VoxelPrototype.common.Game.html
  - name: .
  - uid: VoxelPrototype.common.Game.World
    name: World
    href: VoxelPrototype.common.Game.World.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: VoxelPrototype.common.Game.IBlockAcessor
  commentId: T:VoxelPrototype.common.Game.IBlockAcessor
  parent: VoxelPrototype.common.Game
  href: VoxelPrototype.common.Game.IBlockAcessor.html
  name: IBlockAcessor
  nameWithType: IBlockAcessor
  fullName: VoxelPrototype.common.Game.IBlockAcessor
- uid: VoxelPrototype.common.Game.ITickable
  commentId: T:VoxelPrototype.common.Game.ITickable
  parent: VoxelPrototype.common.Game
  href: VoxelPrototype.common.Game.ITickable.html
  name: ITickable
  nameWithType: ITickable
  fullName: VoxelPrototype.common.Game.ITickable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VoxelPrototype.common.Game
  commentId: N:VoxelPrototype.common.Game
  href: VoxelPrototype.html
  name: VoxelPrototype.common.Game
  nameWithType: VoxelPrototype.common.Game
  fullName: VoxelPrototype.common.Game
  spec.csharp:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.Game
    name: Game
    href: VoxelPrototype.common.Game.html
  spec.vb:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.Game
    name: Game
    href: VoxelPrototype.common.Game.html
- uid: VoxelPrototype.common.Game.World.World.Dispose*
  commentId: Overload:VoxelPrototype.common.Game.World.World.Dispose
  href: VoxelPrototype.common.Game.World.World.html#VoxelPrototype_common_Game_World_World_Dispose
  name: Dispose
  nameWithType: World.Dispose
  fullName: VoxelPrototype.common.Game.World.World.Dispose
- uid: VoxelPrototype.common.Game.World.World.Tick*
  commentId: Overload:VoxelPrototype.common.Game.World.World.Tick
  href: VoxelPrototype.common.Game.World.World.html#VoxelPrototype_common_Game_World_World_Tick
  name: Tick
  nameWithType: World.Tick
  fullName: VoxelPrototype.common.Game.World.World.Tick
- uid: VoxelPrototype.common.Game.ITickable.Tick
  commentId: M:VoxelPrototype.common.Game.ITickable.Tick
  parent: VoxelPrototype.common.Game.ITickable
  href: VoxelPrototype.common.Game.ITickable.html#VoxelPrototype_common_Game_ITickable_Tick
  name: Tick()
  nameWithType: ITickable.Tick()
  fullName: VoxelPrototype.common.Game.ITickable.Tick()
  spec.csharp:
  - uid: VoxelPrototype.common.Game.ITickable.Tick
    name: Tick
    href: VoxelPrototype.common.Game.ITickable.html#VoxelPrototype_common_Game_ITickable_Tick
  - name: (
  - name: )
  spec.vb:
  - uid: VoxelPrototype.common.Game.ITickable.Tick
    name: Tick
    href: VoxelPrototype.common.Game.ITickable.html#VoxelPrototype_common_Game_ITickable_Tick
  - name: (
  - name: )
- uid: VoxelPrototype.common.Game.World.World.GetBlock*
  commentId: Overload:VoxelPrototype.common.Game.World.World.GetBlock
  href: VoxelPrototype.common.Game.World.World.html#VoxelPrototype_common_Game_World_World_GetBlock_System_Int32_System_Int32_System_Int32_
  name: GetBlock
  nameWithType: World.GetBlock
  fullName: VoxelPrototype.common.Game.World.World.GetBlock
- uid: VoxelPrototype.common.Game.IBlockAcessor.GetBlock(System.Int32,System.Int32,System.Int32)
  commentId: M:VoxelPrototype.common.Game.IBlockAcessor.GetBlock(System.Int32,System.Int32,System.Int32)
  parent: VoxelPrototype.common.Game.IBlockAcessor
  isExternal: true
  href: VoxelPrototype.common.Game.IBlockAcessor.html#VoxelPrototype_common_Game_IBlockAcessor_GetBlock_System_Int32_System_Int32_System_Int32_
  name: GetBlock(int, int, int)
  nameWithType: IBlockAcessor.GetBlock(int, int, int)
  fullName: VoxelPrototype.common.Game.IBlockAcessor.GetBlock(int, int, int)
  nameWithType.vb: IBlockAcessor.GetBlock(Integer, Integer, Integer)
  fullName.vb: VoxelPrototype.common.Game.IBlockAcessor.GetBlock(Integer, Integer, Integer)
  name.vb: GetBlock(Integer, Integer, Integer)
  spec.csharp:
  - uid: VoxelPrototype.common.Game.IBlockAcessor.GetBlock(System.Int32,System.Int32,System.Int32)
    name: GetBlock
    href: VoxelPrototype.common.Game.IBlockAcessor.html#VoxelPrototype_common_Game_IBlockAcessor_GetBlock_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: VoxelPrototype.common.Game.IBlockAcessor.GetBlock(System.Int32,System.Int32,System.Int32)
    name: GetBlock
    href: VoxelPrototype.common.Game.IBlockAcessor.html#VoxelPrototype_common_Game_IBlockAcessor_GetBlock_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: VoxelPrototype.common.API.Blocks.State.BlockState
  commentId: T:VoxelPrototype.common.API.Blocks.State.BlockState
  parent: VoxelPrototype.common.API.Blocks.State
  href: VoxelPrototype.common.API.Blocks.State.BlockState.html
  name: BlockState
  nameWithType: BlockState
  fullName: VoxelPrototype.common.API.Blocks.State.BlockState
- uid: VoxelPrototype.common.API.Blocks.State
  commentId: N:VoxelPrototype.common.API.Blocks.State
  href: VoxelPrototype.html
  name: VoxelPrototype.common.API.Blocks.State
  nameWithType: VoxelPrototype.common.API.Blocks.State
  fullName: VoxelPrototype.common.API.Blocks.State
  spec.csharp:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.API
    name: API
    href: VoxelPrototype.common.API.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks
    name: Blocks
    href: VoxelPrototype.common.API.Blocks.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks.State
    name: State
    href: VoxelPrototype.common.API.Blocks.State.html
  spec.vb:
  - uid: VoxelPrototype
    name: VoxelPrototype
    href: VoxelPrototype.html
  - name: .
  - uid: VoxelPrototype.common
    name: common
    href: VoxelPrototype.common.html
  - name: .
  - uid: VoxelPrototype.common.API
    name: API
    href: VoxelPrototype.common.API.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks
    name: Blocks
    href: VoxelPrototype.common.API.Blocks.html
  - name: .
  - uid: VoxelPrototype.common.API.Blocks.State
    name: State
    href: VoxelPrototype.common.API.Blocks.State.html
- uid: VoxelPrototype.common.Game.World.World.IsAir*
  commentId: Overload:VoxelPrototype.common.Game.World.World.IsAir
  href: VoxelPrototype.common.Game.World.World.html#VoxelPrototype_common_Game_World_World_IsAir_System_Int32_System_Int32_System_Int32_
  name: IsAir
  nameWithType: World.IsAir
  fullName: VoxelPrototype.common.Game.World.World.IsAir
- uid: VoxelPrototype.common.Game.IBlockAcessor.IsAir(System.Int32,System.Int32,System.Int32)
  commentId: M:VoxelPrototype.common.Game.IBlockAcessor.IsAir(System.Int32,System.Int32,System.Int32)
  parent: VoxelPrototype.common.Game.IBlockAcessor
  isExternal: true
  href: VoxelPrototype.common.Game.IBlockAcessor.html#VoxelPrototype_common_Game_IBlockAcessor_IsAir_System_Int32_System_Int32_System_Int32_
  name: IsAir(int, int, int)
  nameWithType: IBlockAcessor.IsAir(int, int, int)
  fullName: VoxelPrototype.common.Game.IBlockAcessor.IsAir(int, int, int)
  nameWithType.vb: IBlockAcessor.IsAir(Integer, Integer, Integer)
  fullName.vb: VoxelPrototype.common.Game.IBlockAcessor.IsAir(Integer, Integer, Integer)
  name.vb: IsAir(Integer, Integer, Integer)
  spec.csharp:
  - uid: VoxelPrototype.common.Game.IBlockAcessor.IsAir(System.Int32,System.Int32,System.Int32)
    name: IsAir
    href: VoxelPrototype.common.Game.IBlockAcessor.html#VoxelPrototype_common_Game_IBlockAcessor_IsAir_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: VoxelPrototype.common.Game.IBlockAcessor.IsAir(System.Int32,System.Int32,System.Int32)
    name: IsAir
    href: VoxelPrototype.common.Game.IBlockAcessor.html#VoxelPrototype_common_Game_IBlockAcessor_IsAir_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: VoxelPrototype.common.Game.World.World.IsTransparent*
  commentId: Overload:VoxelPrototype.common.Game.World.World.IsTransparent
  href: VoxelPrototype.common.Game.World.World.html#VoxelPrototype_common_Game_World_World_IsTransparent_System_Int32_System_Int32_System_Int32_
  name: IsTransparent
  nameWithType: World.IsTransparent
  fullName: VoxelPrototype.common.Game.World.World.IsTransparent
- uid: VoxelPrototype.common.Game.IBlockAcessor.IsTransparent(System.Int32,System.Int32,System.Int32)
  commentId: M:VoxelPrototype.common.Game.IBlockAcessor.IsTransparent(System.Int32,System.Int32,System.Int32)
  parent: VoxelPrototype.common.Game.IBlockAcessor
  isExternal: true
  href: VoxelPrototype.common.Game.IBlockAcessor.html#VoxelPrototype_common_Game_IBlockAcessor_IsTransparent_System_Int32_System_Int32_System_Int32_
  name: IsTransparent(int, int, int)
  nameWithType: IBlockAcessor.IsTransparent(int, int, int)
  fullName: VoxelPrototype.common.Game.IBlockAcessor.IsTransparent(int, int, int)
  nameWithType.vb: IBlockAcessor.IsTransparent(Integer, Integer, Integer)
  fullName.vb: VoxelPrototype.common.Game.IBlockAcessor.IsTransparent(Integer, Integer, Integer)
  name.vb: IsTransparent(Integer, Integer, Integer)
  spec.csharp:
  - uid: VoxelPrototype.common.Game.IBlockAcessor.IsTransparent(System.Int32,System.Int32,System.Int32)
    name: IsTransparent
    href: VoxelPrototype.common.Game.IBlockAcessor.html#VoxelPrototype_common_Game_IBlockAcessor_IsTransparent_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: VoxelPrototype.common.Game.IBlockAcessor.IsTransparent(System.Int32,System.Int32,System.Int32)
    name: IsTransparent
    href: VoxelPrototype.common.Game.IBlockAcessor.html#VoxelPrototype_common_Game_IBlockAcessor_IsTransparent_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: VoxelPrototype.common.Game.World.World.IsChunkExist*
  commentId: Overload:VoxelPrototype.common.Game.World.World.IsChunkExist
  href: VoxelPrototype.common.Game.World.World.html#VoxelPrototype_common_Game_World_World_IsChunkExist_System_Int32_System_Int32_
  name: IsChunkExist
  nameWithType: World.IsChunkExist
  fullName: VoxelPrototype.common.Game.World.World.IsChunkExist
- uid: VoxelPrototype.common.Game.World.World.GetChunk*
  commentId: Overload:VoxelPrototype.common.Game.World.World.GetChunk
  href: VoxelPrototype.common.Game.World.World.html#VoxelPrototype_common_Game_World_World_GetChunk_System_Int32_System_Int32_
  name: GetChunk
  nameWithType: World.GetChunk
  fullName: VoxelPrototype.common.Game.World.World.GetChunk
- uid: VoxelPrototype.common.Game.World.Chunk
  commentId: T:VoxelPrototype.common.Game.World.Chunk
  parent: VoxelPrototype.common.Game.World
  href: VoxelPrototype.common.Game.World.Chunk.html
  name: Chunk
  nameWithType: Chunk
  fullName: VoxelPrototype.common.Game.World.Chunk
- uid: VoxelPrototype.common.Game.World.World.SetBlock*
  commentId: Overload:VoxelPrototype.common.Game.World.World.SetBlock
  href: VoxelPrototype.common.Game.World.World.html#VoxelPrototype_common_Game_World_World_SetBlock_System_Int32_System_Int32_System_Int32_VoxelPrototype_common_API_Blocks_State_BlockState_
  name: SetBlock
  nameWithType: World.SetBlock
  fullName: VoxelPrototype.common.Game.World.World.SetBlock
- uid: VoxelPrototype.common.Game.IBlockAcessor.SetBlock(System.Int32,System.Int32,System.Int32,VoxelPrototype.common.API.Blocks.State.BlockState)
  commentId: M:VoxelPrototype.common.Game.IBlockAcessor.SetBlock(System.Int32,System.Int32,System.Int32,VoxelPrototype.common.API.Blocks.State.BlockState)
  parent: VoxelPrototype.common.Game.IBlockAcessor
  isExternal: true
  href: VoxelPrototype.common.Game.IBlockAcessor.html#VoxelPrototype_common_Game_IBlockAcessor_SetBlock_System_Int32_System_Int32_System_Int32_VoxelPrototype_common_API_Blocks_State_BlockState_
  name: SetBlock(int, int, int, BlockState)
  nameWithType: IBlockAcessor.SetBlock(int, int, int, BlockState)
  fullName: VoxelPrototype.common.Game.IBlockAcessor.SetBlock(int, int, int, VoxelPrototype.common.API.Blocks.State.BlockState)
  nameWithType.vb: IBlockAcessor.SetBlock(Integer, Integer, Integer, BlockState)
  fullName.vb: VoxelPrototype.common.Game.IBlockAcessor.SetBlock(Integer, Integer, Integer, VoxelPrototype.common.API.Blocks.State.BlockState)
  name.vb: SetBlock(Integer, Integer, Integer, BlockState)
  spec.csharp:
  - uid: VoxelPrototype.common.Game.IBlockAcessor.SetBlock(System.Int32,System.Int32,System.Int32,VoxelPrototype.common.API.Blocks.State.BlockState)
    name: SetBlock
    href: VoxelPrototype.common.Game.IBlockAcessor.html#VoxelPrototype_common_Game_IBlockAcessor_SetBlock_System_Int32_System_Int32_System_Int32_VoxelPrototype_common_API_Blocks_State_BlockState_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: VoxelPrototype.common.API.Blocks.State.BlockState
    name: BlockState
    href: VoxelPrototype.common.API.Blocks.State.BlockState.html
  - name: )
  spec.vb:
  - uid: VoxelPrototype.common.Game.IBlockAcessor.SetBlock(System.Int32,System.Int32,System.Int32,VoxelPrototype.common.API.Blocks.State.BlockState)
    name: SetBlock
    href: VoxelPrototype.common.Game.IBlockAcessor.html#VoxelPrototype_common_Game_IBlockAcessor_SetBlock_System_Int32_System_Int32_System_Int32_VoxelPrototype_common_API_Blocks_State_BlockState_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: VoxelPrototype.common.API.Blocks.State.BlockState
    name: BlockState
    href: VoxelPrototype.common.API.Blocks.State.BlockState.html
  - name: )
